require:
   earlgrey as eg
   loader-utils as utils

module.exports = source ->
   if this.cacheable: this.cacheable()
   earl-request = utils.getRemainingRequest(this)
   js-request   = utils.getCurrentRequest(this)
   query        = utils.parseQuery(this.query)
   var result   = undefined
   try:
      var opts = {
         es5 = query.es5 or false
         sourceMaps = query.sourceMaps or null
         runtime = query.runtime or "earlgrey-runtime"
      }
      if query.params: opts = opts & parse-params(query.params)
      result = eg.Generator(opts).generate(eg.Source{source})
   catch e: throw e
   if result.map:
      map = JSON.parse(result.map)
      map.sourcesContent = [source]
      this.callback(null, result.code, map)
   else:
      this.callback(null, result.code, null)

;; TODO: Implement function
parse-params = params -> pass
