require:
   earlgrey as eg
   loader-utils as utils

module.exports = source ->
   if this.cacheable: this.cacheable()
   var query    = utils.parseQuery(this.query)
   var result   = undefined
   try:
      var opts = {
         es5        = query.es5
         sourceMaps = query.sourceMaps
         runtime    = query.runtime
         parameters = {=}
      }
      delete query.es5
      delete query.sourceMaps
      delete query.runtime
      for opt in query:
         opts.parameters[opt] = query[opt]
      result = eg.Generator(opts).generate(eg.Source{source})
   catch e: throw e
   if result.map:
      map = JSON.parse(result.map)
      map.sourcesContent = {source}
      this.callback(null, result.code, map)
   else:
      this.callback(null, result.code, null)
